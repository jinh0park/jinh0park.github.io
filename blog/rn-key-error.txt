1:"$Sreact.fragment"
2:I[2619,["619","static/chunks/619-ba102abea3e3d0e4.js","953","static/chunks/app/blog/%5Bslug%5D/page-7cf65f3911bce8b7.js"],""]
3:I[9766,[],""]
4:I[8924,[],""]
6:I[4431,[],"OutletBoundary"]
8:I[5278,[],"AsyncMetadataOutlet"]
a:I[4431,[],"ViewportBoundary"]
c:I[4431,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[7150,[],""]
:HL["/_next/static/media/4cf2300e9c8272f7-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/8cd908196c5f99fa.css","style"]
0:{"P":null,"b":"Q1OAHiYHdVqoy_--xdsNg","p":"","c":["","blog","rn-key-error"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","rn-key-error","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/8cd908196c5f99fa.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","children":["$","body",null,{"className":"__variable_188709 __variable_9a8899 antialiased","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","header",null,{"className":"bg-gray-100 dark:bg-gray-900 border-b","children":["$","div",null,{"className":"container mx-auto px-4 py-4 flex justify-between items-center","children":[["$","$L2",null,{"href":"/","className":"text-xl font-bold hover:text-blue-600","children":"jinh0park = jin + h0 + park"}],["$","nav",null,{"children":["$","a",null,{"href":"https://github.com/jinh0park","target":"_blank","rel":"noopener noreferrer","className":"text-gray-600 dark:text-gray-300 hover:text-black dark:hover:text-white","children":"GitHub"}]}]]}]}],["$","main",null,{"className":"flex-grow container mx-auto px-4 py-8","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"border-t mt-12 py-6","children":["$","div",null,{"className":"container mx-auto px-4 text-center text-gray-500","children":["$","p",null,{"children":["© ",2025," jinh0park. All Rights Reserved."]}]}]}]]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","rn-key-error","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
10:T1a78,<p>방학을 맞아 React Native를 배우고 이것 저것 만들어보고 있다.</p>
<p>채찍피티의 도움으로 쉽고 재미있게 코딩을 하고 있었는데... 어제부터 오늘까지 24시간 동안 날 괴롭힌 오류가 발생했다.</p>
<pre><code> (NOBRIDGE) ERROR  Warning: Each child in a list should have a unique "key" prop.
</code></pre>
<p>사실 ReactJS를 조금만 다뤄봤다면 금방 해결할 수 있는 문제이다. <code>map</code> function을 이용해서 컴포넌트를 렌더링하면 <code>key</code> 를 지정해주어야 하면 에러 메시지는 사라진다.</p>
<p>그런데! RN을 배우면서 처음 <code>FlatList</code> 를 써보게 되었고, 이 컴포넌트는 내가 <strong>리스트의 아이템이 되는 컴포넌트</strong> 에게 직접 <code>key</code> 를 지정하지 않고 <code>keyExtractor</code> 를 정의하면 알아서 이를 지정하는 방식으로 작동함을 알게 되었다.</p>
<p>그리하여 챗지피티와 RN 공식 문서, 스택오버플로를 참고하면서 코드를 잘 짰는데, 도무지 위의 에러 메시지가 없어지지 않았다. 그래서 어찌저찌 <code>key</code> prop을 직접 지정하기까지 했는데도 해결될 기미가 보이지 않았다.</p>
<p>분명 에러메시지는 <strong>리스트의 아이템이 되는 컴포넌트</strong> 의 최상위 태그에서 문제가 발생했다고 말하고 있었다. 그런데 직접 key를 해당 태그에 넣어도 변화가 없어서 미칠 노릇이었다.</p>
<p>내가 <code>FlatList</code> 의 작동 방식을 잘 이해하지 못하고있나? 해서 한참을 뒤져보아도 관련된 정보를 찾지 못했다. 그러다 마지막으로 해본게, <strong>리스트의 아이템이 되는 컴포넌트</strong> 의 하위 컴포넌트들을 차례로 주석처리하면서 어디 부분에서 에러가 발생하는지 찾는 것이었다.</p>
<p>그랬더니, 컴포넌트 안쪽에서 아래와 비슷한 구조가 발견되었다.</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#24292e;color:#e1e4e8" tabindex="0" data-language="jsx" data-theme="github-dark"><code data-language="jsx" data-theme="github-dark" style="display: grid;"><span data-line=""><span style="color:#E1E4E8">{list.</span><span style="color:#B392F0">map</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">item</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">index</span><span style="color:#E1E4E8">)</span><span style="color:#F97583">=></span><span style="color:#E1E4E8">(</span></span>
<span data-line=""><span style="color:#E1E4E8">  &#x3C;></span></span>
<span data-line=""><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#79B8FF">Text</span><span style="color:#B392F0"> item</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{item} </span><span style="color:#B392F0">key</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{index}>&#x3C;</span><span style="color:#79B8FF">Text</span><span style="color:#E1E4E8">></span></span>
<span data-line=""><span style="color:#E1E4E8">    {item.anotherList.</span><span style="color:#B392F0">map</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">item</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">index</span><span style="color:#E1E4E8">)</span><span style="color:#F97583">=></span><span style="color:#E1E4E8">(</span></span>
<span data-line=""><span style="color:#E1E4E8">      &#x3C;</span><span style="color:#79B8FF">Text</span><span style="color:#E1E4E8">>&#x3C;/</span><span style="color:#79B8FF">Text</span><span style="color:#E1E4E8">></span></span>
<span data-line=""><span style="color:#E1E4E8">      ))}</span></span>
<span data-line=""><span style="color:#E1E4E8">  &#x3C;/></span></span>
<span data-line=""><span style="color:#E1E4E8">  ))}</span></span></code></pre></figure>
<p>이 코드를 대충 봤을 때는 <code>key</code> 를 잘 지정해준 것으로 보이지만, 잘 보면 <code>map</code> 의 반환값의 최상위 태그가 아닌 그 하위 태그에 <code>key</code> 가 설정되어 있었다. 이를 아래와 같이 고치니 오류가 해결되었다.</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#24292e;color:#e1e4e8" tabindex="0" data-language="jsx" data-theme="github-dark"><code data-language="jsx" data-theme="github-dark" style="display: grid;"><span data-line=""><span style="color:#E1E4E8">{list.</span><span style="color:#B392F0">map</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">item</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">index</span><span style="color:#E1E4E8">)</span><span style="color:#F97583">=></span><span style="color:#E1E4E8">(</span></span>
<span data-line=""><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#79B8FF">View</span><span style="color:#B392F0"> key</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{index}></span></span>
<span data-line=""><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#79B8FF">Text</span><span style="color:#B392F0"> item</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{item}>&#x3C;</span><span style="color:#79B8FF">Text</span><span style="color:#E1E4E8">></span></span>
<span data-line=""><span style="color:#E1E4E8">    {item.anotherList.</span><span style="color:#B392F0">map</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">item</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">index</span><span style="color:#E1E4E8">)</span><span style="color:#F97583">=></span><span style="color:#E1E4E8">(</span></span>
<span data-line=""><span style="color:#E1E4E8">      &#x3C;</span><span style="color:#79B8FF">Text</span><span style="color:#E1E4E8">>&#x3C;/</span><span style="color:#79B8FF">Text</span><span style="color:#E1E4E8">></span></span>
<span data-line=""><span style="color:#E1E4E8">      ))}</span></span>
<span data-line=""><span style="color:#E1E4E8">  &#x3C;/</span><span style="color:#79B8FF">View</span><span style="color:#E1E4E8">></span></span>
<span data-line=""><span style="color:#E1E4E8">  ))}</span></span></code></pre></figure>
<p>사후적으로 보면 정말 간단한 문제였는데, 에러 메세지가 가리키는 라인이 정확한 곳을 가리키지 않아 오류의 원인을 찾을 수 없었다.
타입스크립트를 쓰면 이런걸 해결할 수 있나? 넘어가기 귀찮은데...</p>
<p>여하튼 챗지피티를 쓴 이후로 에러로 골머리를 앓는 일이 훨씬 줄어들었는데, 간만에 고통스러운 문제 해결 과정을 겪었다. 후련하다!</p>5:["$","article",null,{"className":"prose dark:prose-invert mx-auto py-8","children":[["$","h1",null,{"className":"text-4xl font-bold","children":"React Native Key 설정시 주의점"}],["$","div",null,{"className":"flex items-center gap-4 mt-2 mb-2","children":[["$","p",null,{"className":"text-gray-500 !my-0","children":"2024년 12월 28일"}],["$","$L2",null,{"href":"/categories/dev","children":["$","span",null,{"className":"bg-gray-200 text-gray-800 text-sm font-medium px-3 py-1 rounded-full !my-0 hover:bg-gray-300","children":"dev"}]}]]}],["$","hr",null,{"className":"!my-4"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$10"}}]]}]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
11:I[622,[],"IconMark"]
9:{"metadata":[["$","title","0",{"children":"React Native Key 설정시 주의점 | jinh0park's Blog"}],["$","meta","1",{"name":"description","content":"Array key 설정 실수 기록"}],["$","meta","2",{"property":"og:title","content":"React Native Key 설정시 주의점"}],["$","meta","3",{"property":"og:description","content":"Array key 설정 실수 기록"}],["$","meta","4",{"property":"og:type","content":"article"}],["$","meta","5",{"property":"article:published_time","content":"2024-12-28T00:00:00.000Z"}],["$","meta","6",{"name":"twitter:card","content":"summary"}],["$","meta","7",{"name":"twitter:title","content":"React Native Key 설정시 주의점"}],["$","meta","8",{"name":"twitter:description","content":"Array key 설정 실수 기록"}],["$","link","9",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","$L11","10",{}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
